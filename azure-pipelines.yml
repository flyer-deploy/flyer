trigger:
  branches:
    include:
      - main

  tags:
    include:
      - "v*"

pool:
  name: Default

jobs:
  - job: Release
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
    steps:
      - script: |
          sudo update-alternatives --set php /usr/bin/php$(phpVersion)
          sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
          sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
          sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
          sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
          php -version
        displayName: "Use PHP version $(phpVersion)"

      - script: |
          rm -rf .git
        displayName: Directory cleanup

      - script: composer install --no-interaction --prefer-dist
        displayName: "composer install"

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: "$(System.DefaultWorkingDirectory)/root"
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: "$(System.DefaultWorkingDirectory)/$(Build.BuildId).zip"
          replaceExistingArchive: true

      - task: AzureCLI@2
        inputs:
          azureSubscription: "sp-deployer-recipes"
          scriptType: "bash"
          scriptLocation: "inlineScript"
          inlineScript: |
            set -e

            rg=$(ACCOUNT_RESOURCE_GROUP)
            account_name=$(ACCOUNT_NAME)
            container=$(ACCOUNT_CONTAINER)

            # account_key=$(ACCOUNT_KEY)
            version=$(Build.SourceBranchName)

            az config set extension.use_dynamic_install=yes_without_prompt

            echo 'Uploading...'
            az storage blob upload -c \
              $container \
              --file "$(System.DefaultWorkingDirectory)/$(Build.BuildId).zip" \
              -n "$version/installer.zip" \
              --account-name $account_name
            az storage blob upload -c \
              $container \
              --file "$(System.DefaultWorkingDirectory)/$(Build.BuildId).zip" \
              -n "latest/installer.zip" \
              --account-name $account_name \
              --overwrite
